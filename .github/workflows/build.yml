name: Build

on:
  push:
    branches:
    - main
    tags:
    - 'v*'
  pull_request:

jobs:

  context-info:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Repo info
        run: |
          curl -s \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}

  TestAndPublish:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      ITEST_IMAGE_TAG: rc-${{ github.event.number }}

    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Prepare
      run: make vars tools generate version

    - name: UnitTest
      run: make build covtest

    #- name: Set up Docker Buildx
    #  uses: docker/setup-buildx-action@v1

    #- name: Login to Registry
    #  uses: docker/login-action@v1
    #  with:
    #    username: ${{ secrets.DOCKERHUB_USERNAME }}
    #    password: ${{ secrets.DOCKERHUB_TOKEN }}

    #- name: Docker sfservice meta
    #  id: meta_sfservice
    #  uses: docker/metadata-action@v3
    #  with:
    #    # list of Docker images to use as base name for tags
    #    images: |
    #      ableorg/sfservice
    #    tags: |
    #      type=ref,event=branch
    #      type=ref,event=pr
    #      type=semver,pattern={{version}}
    #      type=semver,pattern={{major}}.{{minor}}
    #      type=semver,pattern={{major}}
    #      type=sha

    #- name: Docker sfservice docker/build-push-action@v2
    #  id: docker_build_sfservice
    #  uses: docker/build-push-action@v2
    #  with:
    #    file: ./Dockerfile
    #    context: .
    #    push: false # TODO: true after Docker login
    #    tags: ${{ steps.meta_sfservice.outputs.tags }}
    #    labels: ${{ steps.meta_sfservice.outputs.labels }}

    #- name: Coverage
    #  uses: paambaati/codeclimate-action@84cea27117a473d605400ca3a97fcef7e433e2d6
    #  env:
    #    CC_TEST_REPORTER_ID: b9e939e0a9a8e45615cadbd1f114a08aa1002341f0b629496372013b867ef5e4
    #    CI: true
    #  with:
    #    coverageCommand: go test -coverprofile=${{github.workspace}}/c.out ./...
    #    coverageLocations: |
    #      ${{github.workspace}}/c.out
